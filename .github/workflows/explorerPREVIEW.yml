name : explorer_preview
on:
  workflow_run:
    workflows: ["Explorer_build&test_on_PR"]
    types: 
      - completed
jobs:
   explorer_preview:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: amondnet/vercel-action@v20 
        id: tests
        with: 
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 


#           working-directory: ./explorer
          
      - name: vercel url
        run : |
              pwd
              vercel --token ${{secrets.VERCEL_DEPLOY_TOKEN}} ls solana > vercelfile.txt
              echo "first line"
              head -n 2 vercelfile.txt > vercelfile1.txt
              vercelfile1.txt tail -n 1  > vercelfile2.txt
              filtered_url=(cut -f8 -d" " vercelfile2.txt )
              echo "filtered_url is: $filtered_url"
              #source ./vercelfile.txt | grep ".vercel.app"
              #vercel --token ${{secrets.VERCEL_DEPLOY_TOKEN}} ls solana | grep "latest deployment" > vercel_url.txt     
              
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
         SLACK_MESSAGE: ${{ steps.tests.outputs.stdout }} - ${ filtered_url }
         SLACK_TITLE: Vercel Deployment Link
         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

   explorer_preview1:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: amondnet/vercel-action@v20 
        id: tests
        with: 
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 


#           working-directory: ./explorer
          
      - name: vercel url
        run : |
              pwd
              vercel --token ${{secrets.VERCEL_DEPLOY_TOKEN}} ls solana > vercelfile.txt
              echo "first line"
              filtered_url=(head -n 2 vercelfile.txt | tail -n 1 | cut -f8 -d" ")
              echo "filtered_url is: $filtered_url"
              head -n 2 vercelfile.txt | tail -n 1 | cut -f8 -d" " > vercelfile1.txt
              echo "third"
              cat vercelfile1.txt
              #source ./vercelfile.txt | grep ".vercel.app"
              #vercel --token ${{secrets.VERCEL_DEPLOY_TOKEN}} ls solana | grep "latest deployment" > vercel_url.txt     
              
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
         SLACK_MESSAGE: ${{ steps.tests.outputs.stdout }} - $filtered_url
         SLACK_TITLE: Vercel Deployment Link
         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
