name : explorer_preview
on:
  workflow_run:
    workflows: ["Explorer_build&test_on_PR"]
    types: 
      - completed
jobs:
   explorer_preview:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 
          working-directory: ./explorer
          scope: ${{ secrets.TEAM_ID }}
     
      - name: vercel url
        run : |
              touch vercelfile.txt
              vercel --token ${{secrets.VERCEL_TOKEN}}  ls solana --scope zsks8AsQoegklEi6s3kr96Df > vercelfile.txt
              echo "first line"
              cat vercelfile.txt
              touch vercelfile1.txt
              head -n 2 vercelfile.txt > vercelfile1.txt
              echo "2 line"
              cat vercelfile1.txt
              touch vercelfile2.txt
              tail -n 1 vercelfile1.txt > vercelfile2.txt
              echo "3 line"              
              cat vercelfile2.txt
              filtered_url8=$(cut -f8 -d" " vercelfile2.txt)
              echo "filtered_url8 is: $filtered_url8" 
              touch .env.preview1
              echo "$filtered_url8" > .env.preview1
              #filtered_url=$(cat vercelfile2.txt )
              #echo "$filtered_url" >> .env.preview1 
              # HEAD_SHA=$(curl -H "Accept: application/vnd.github.v3+json"  https://api.github.com/repos/Naveenmishra1197/solana/pulls | jq .[0] | jq -r .head.sha)
              # echo ".head.sha is : $HEAD_SHA"

      
      - name: Fetching Vercel Preview Deployment Link
        uses: mathiasvr/command-output@v1
        id: test1
        with:
          run: |
               echo "$(cat .env.preview1)"
              #  HEAD_SHA=$(curl -H "Accept: application/vnd.github.v3+json"  https://api.github.com/repos/Naveenmishra1197/solana/pulls | jq .[0] | jq -r .head.sha)
              #  USER_NAME=$(curl -H "Accept: application/vnd.github.v3+json"  https://api.github.com/repos/Naveenmishra1197/solana/pulls | jq .[0] | jq -r .head.user.login)
              #  echo "github.com/$USER_NAME/solana/commit/$HEAD_SHA"
      
      - name: Fetching PR commit URL
        uses: mathiasvr/command-output@v1
        id: test2
        with:
          run: |
               HEAD_SHA=$(curl -H "Accept: application/vnd.github.v3+json"  https://api.github.com/repos/Naveenmishra1197/solana/pulls | jq .[0] | jq -r .head.sha)
               USER_NAME=$(curl -H "Accept: application/vnd.github.v3+json"  https://api.github.com/repos/Naveenmishra1197/solana/pulls | jq .[0] | jq -r .head.user.login)
               echo "github.com/$USER_NAME/solana/commit/$HEAD_SHA"

      # - name: Slack Notification1
      #   uses: rtCamp/action-slack-notify@master
      #   env:
      #    SLACK_MESSAGE: ${{ steps.tests2.outputs.stdout }}
      #    SLACK_TITLE: Vercel "Explorer" Preview Deployment Link
      #    SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


      - name: Slack Notification4
        uses: rtCamp/action-slack-notify@master
        env:
         SLACK_MESSAGE: ' Vercel Link: ${{ steps.test1.outputs.stdout }}, \nPR Commit: ${{steps.test2.outputs.stdout}}'
         SLACK_TITLE: Vercel "Explorer" Preview Deployment Link , PR Commit
         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

#       - name: Slack Notification3
#         uses: rtCamp/action-slack-notify@master
#         env:
#          SLACK_MESSAGE: ${{ steps.tests2.outputs.stdout }},${{PR_SHA}}
#          SLACK_TITLE: Vercel "Explorer" Preview Deployment Link,PR_Commit_ID
#          SLACK_MESSAGE1: ${{ steps.tests2.outputs.stdout }}
#          SLACK_TITLE1: Vercel "Explorer" Preview Deployment Link1
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


#       -  name: Slack Notification2
#          uses: ravsamhq/notify-slack-action@v1
#          if: always()
#          with:
#           status: ${{ job.status }} # required
#          env:
#           SLACK_MESSAGE: ${{ steps.tests2.outputs.stdout }}
#           SLACK_TITLE: Vercel "Explorer" Preview Deployment Link
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#           SLACK_MESSAGE1: ${{ steps.tests2.outputs.stdout }}
#           SLACK_TITLE1: Vercel "Explorer" Preview Deployment Link
          
